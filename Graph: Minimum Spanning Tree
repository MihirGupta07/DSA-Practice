class Solution
{
	public:
	
    int spanningTree(int V, vector<vector<int>> adj[])
    {
       
        priority_queue<pair<int,int>, vector<pair<int,int>>, greater<pair<int,int>> > pq;
        
        int source = 0;
        pq.push({0,source});
        
        int cost = 0;
        
        vector<bool> visited(V,false);
        
        pair<int,int> p;
        
        while(!pq.empty()){
            
            p = pq.top();
            pq.pop();
            
            if(visited[p.second] == true)
            continue;
            
            cost += p.first;
            
            visited[p.second] = true;
            
            int x = p.second;
            
            for(int i = 0; i < adj[x].size(); i++){
                
                if(!visited[adj[x][i][0]]){
                    
                    pq.push({adj[x][i][1],adj[x][i][0]});
                }
            }
        }
        
        return cost;
        
    }
};
